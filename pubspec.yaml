name: Field_Monitoring
description: A flutter Field_Monitoring project created using MobX and Provider.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# Read more about versioning at semver.org.
version: 1.0.0+1

environment:
  sdk: ">=2.15.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  image_picker: ^0.8.5+6
  video_player: ^2.4.5
  google_maps_place_picker_mb: 3.0.1
  geolocator: ^9.0.2
  cached_network_image: ^3.2.3
  carousel_slider: ^4.2.1
  url_launcher: ^6.1.5
  rxdart: ^0.27.5
  empty_widget: ^0.0.5
#  map_launcher: ^2.2.3
#  rolling_nav_bar: ^0.0.4
#  rolling_nav_bar: ^0.0.5-nullsafety.3
  rolling_bottom_bar: ^0.2.2
#  tinycolor: ^1.0.3a
  smooth_star_rating_nsafe: ^1.0.0+1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3

  # The following adds the shared pref as a dependency in your application
  shared_preferences: ^2.0.6

  # A composable, Future-based library for making HTTP requests.
  http: ^0.13.3

  # Flogs, a powerful logging framework
#  f_logs: ^1.2.2

  # MobX is a library for reactively managing the state of your applications. Use the power of
  # observables, actions, and reactions to supercharge your Dart and Flutter apps.
  mobx: ^2.0.1
  flutter_mobx: ^2.0.0
  #ORM
  floor: ^1.4.1

  # An helper to easily exposes a value using InheritedWidget without havbuilding to write one.
  provider: ^6.0.3

  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^3.0.0

  # A powerful Http client for Dart
  dio: ^5.0.0

  # A flexible widget for user notification. Customize your text, button, duration, animations
  # and much more. For Android devs, it is made to replace Snackbars and Toasts.
  another_flushbar: ^1.10.23

  # Material Dialog
  material_dialog: ^1.0.0-nullsafety.1

  # This package provides internationalization and localization facilities, including message
  # translation, plurals and genders, date/number formatting and parsing, and bidirectional text.
  intl: ^0.17.0
  flutter_localizations:
   sdk: flutter
  # XXTEA is a fast and secure encryption algorithm. This is a XXTEA library for Dart.
  xxtea: ^2.1.0

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  sembast: ^3.1.0+2
  path_provider: ^2.0.12
  flutter_phoenix: ^1.1.0
  sleek_circular_slider: ^2.0.1

  # for dependency injection
  get_it: ^7.1.3

  google_fonts: ^4.0.3
  photo_view: ^0.14.0
  flutter_svg: ^2.0.0+1
  timelines: ^0.1.0
  google_api_headers: ^1.5.0
  uuid: ^3.0.6
 # google_maps_flutter_platform_interface: ^2.2.2
  package_info_plus: ^3.0.3
  package_info_plus_web: ^2.0.0
  firebase_core: ^2.5.0
  firebase_messaging: ^14.2.2
  firebase_analytics: ^10.1.1
  flutter_local_notifications: ^13.0.0
  injectable: ^2.1.0
  im_stepper: ^1.0.1+1
  cupertino_stepper: ^0.2.1
  easy_stepper: ^0.3.2
  percent_indicator: ^4.2.3
  expandable: ^5.0.1
  flutter_dash: ^1.0.0
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The following adds the launcher icon support to your application.
  # run below mentioned commands to generate launcher icons
  # flutter packages get
  # flutter packages pub run flutter_launcher_icons:main
  flutter_launcher_icons: ^0.9.3
  mobx_codegen: ^2.0.1+3
  build_runner: ^2.3.3
  analyzer: ^5.0.0
  floor_generator: ^1.4.1
  injectable_generator:


flutter_icons:
  image_path: "assets/icons/ic_launcher.png"
  android: true
  ios: true


# For information on the generic Dart art of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
  - assets/images/
  - assets/icons/
  - assets/icon/
  - assets/lang/
  - assets/images/splash/
  - assets/images/home/
  - assets/images/nav_bar/
  - assets/images/add_incident/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
  - family: ProductSans
    fonts:
    - asset: assets/fonts/Product-Sans-Regular.ttf
    - asset: assets/fonts/Product-Sans-Italic.ttf
      style: italic
    - asset: assets/fonts/Product-Sans-Bold.ttf
      weight: 700
  - family: Cairo
    fonts:
      - asset: assets/fonts/Cairo-Bold.ttf
        weight: 700
      - asset: assets/fonts/Cairo-Regular.ttf
        style: normal
      - asset: assets/fonts/Cairo-ExtraBold.ttf
        weight: 900
      - asset: assets/fonts/Cairo-SemiBold.ttf
        weight: 800

  # For details regarding fonts from package dependencies,
  # see https://flutter.io/custom-fonts/#from-packages
